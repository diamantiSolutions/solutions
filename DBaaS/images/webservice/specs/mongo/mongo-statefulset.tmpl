apiVersion: v1
kind: List
items:
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: <SVC_NAME>-mongo
  spec:
    serviceName: "<SVC_NAME>-mongo"
    replicas: <NUM_REPLICAS>
    template:
      metadata:
        annotations:
          diamanti.com/endpoint0: '{"network":"<NETWORK>","perfTier":"<NET_PERF_TIER>"}'
        labels:
          role: <SVC_NAME>-mongo
          environment: <SVC_NAME>-test
      spec:
        terminationGracePeriodSeconds: 10
        containers:
          - name: mongo
            image: mongo
            command:
              - mongod
              - "--replSet"
              - rs0
              - "--smallfiles"
              - "--noprealloc"
            ports:
              - containerPort: 27017
            volumeMounts:
              - name: mongo-persistent-storage
                mountPath: /data/db
          - name: mongo-sidecar
            image: diamantisolutions/mongo-k8s-sidecar:v1
            #image: cvallance/mongo-k8s-sidecar
            env:
              - name: MONGO_SIDECAR_POD_LABELS
                value: "role=<SVC_NAME>-mongo,environment=<SVC_NAME>-test"
              - name: KUBERNETES_CLUSTER_DOMAIN
                value: "solutions.diamanti.com"
    volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "<STORAGE_CLASS>"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: <VOL_SIZE>Gi
- apiVersion: v1
  kind: Service
  metadata:
    name: <SVC_NAME>-mongo
  spec:
    clusterIP: None
    ports:
    - name: tcp0
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      #name: mongo-node-<num>
      role: <SVC_NAME>-mongo
    sessionAffinity: None
    type: ClusterIP
