apiVersion: v1
items:
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    creationTimestamp: null
    labels:
      role: <SVC_NAME>-pg
      dbsvc: <SVC_NAME>
    name: <SVC_NAME>-pg
  spec:
    serviceName: "<SVC_NAME>-pg"
    replicas: <NUM_REPLICAS>
    template:
      metadata:
        annotations:
          diamanti.com/endpoint0: '{"network":"<NETWORK>","perfTier":"<NET_PERF_TIER>"}'
        creationTimestamp: null
        labels:
          role: <SVC_NAME>-pg
          dbsvc: <SVC_NAME>
        name: <SVC_NAME>-pg
      spec:
        containers:
        - env:
          - name: KUBERNETES_SERVICE_HOST
            value: 172.16.17.3
          - name: KUBERNETES_SERVICE_PORT
            value: "8080"
          - name: PG_SERVICE_NAME
            value: <SVC_NAME>
          - name: PG_MASTER_PORT
            value: "5432"
          - name: PG_MASTER_USER
            value: master
          - name: PG_MODE
            value: set
          - name: PG_MASTER_PASSWORD
            value: <MASTER_PASSWORD>
          - name: PG_USER
            value: <USER>
          - name: PG_PASSWORD
            value: <USER_PASSWORD>
          - name: PG_DATABASE
            value: <DATABASE_NAME>
          - name: PG_ROOT_PASSWORD
            value: <ROOT_PASSWORD>
          - name: PGHOST
            value: /tmp
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: guptaarvindk/diamanti-postgres:v2
          imagePullPolicy: Always
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /pgdata
            name: pg-vol
        - args:
          - agent
          - -advertise=$(POD_IP)
          - -bind=0.0.0.0
          - -bootstrap-expect=3
          - -client=0.0.0.0
          - -datacenter=dc1
          - -data-dir=/var/lib/consul
          - -domain=<CLUSTER_DOMAIN>
          - -server
          - -ui
          - -disable-host-node-id
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: consul:0.9.2
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - consul leave
          name: consul
          ports:
          - containerPort: 8500
            name: ui-port
            protocol: TCP
          - containerPort: 8400
            name: alt-port
            protocol: TCP
          - containerPort: 53
            name: udp-port
            protocol: TCP
          - containerPort: 8443
            name: https-port
            protocol: TCP
          - containerPort: 8080
            name: http-port
            protocol: TCP
          - containerPort: 8301
            name: serflan
            protocol: TCP
          - containerPort: 8302
            name: serfwan
            protocol: TCP
          - containerPort: 8600
            name: consuldns
            protocol: TCP
          - containerPort: 8300
            name: server
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/consul
            name: data
          - mountPath: /etc/consul
            name: config
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: PGHOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SLEEP_TIME
            value: "20"
          - name: KUBERNETES_CLUSTER_DOMAIN
            value: solutions.diamanti.com
          - name: KUBERNETES_CLUSTER_NAME
            value: solutions-cluster
          - name: KUBERNETES_SERVICE_HOST
            value: 172.16.17.3
          - name: KUBERNETES_SERVICE_PORT
            value: "8080"
          - name: PG_SERVICE_NAME
            value: <SVC_NAME>
          - name: KUBE_NAMESPACE
            value: default
          - name: MASTER_LABEL
            value: name=<SVC_NAME>-master
          image: guptaarvindk/pg-controller:v2
          imagePullPolicy: Always
          name: pg-controller
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /pgdata
            name: pg-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 26
        terminationGracePeriodSeconds: 10
        volumes:
        - configMap:
            defaultMode: 420
            name: consul
          name: config
        - emptyDir: {}
          name: data
    volumeClaimTemplates:
    - metadata:
        name: pg-vol
        annotations:
          volume.beta.kubernetes.io/storage-class: "<STORAGE_CLASS>"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: <VOL_SIZE>Gi
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: <SVC_NAME>-pg
      dbsvc: <SVC_NAME>
    name: <SVC_NAME>-pg
  spec:
    clusterIP: None
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: <SVC_NAME>-pg
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
