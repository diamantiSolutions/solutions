apiVersion: v1
items:
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    creationTimestamp: null
    labels:
      app: <SVC_NAME>-mssql
    name: <SVC_NAME>-rs
  spec:
    serviceName: "<SVC_NAME>-mssql"
    replicas: <NUM_REPLICAS>
    replicas: 1
#    selector:
#      app: <SVC_NAME>-mssql
    template:
      metadata:
        annotations:
          diamanti.com/endpoint0: '{"network":"<NETWORK>","perfTier":"<NET_PERF_TIER>"}'
        labels:
          app: <SVC_NAME>-mssql
      spec:
        containers:
        - env:
          - name: SA_PASSWORD
            value: "<SA_PASSWORD>"
          - name: ACCEPT_EULA
            value: "Y"
          image: microsoft/mssql-server-linux
          imagePullPolicy: IfNotPresent
          name: mssql
          resources:
            requests:
              cpu: 2000m
              memory: 4Gi
            limits:
              cpu: 8000m
              memory: 8Gi 
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/opt/mssql
            name: mssql-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    volumeClaimTemplates:
    - metadata:
        name: mssql-vol
        annotations:
          volume.beta.kubernetes.io/storage-class: "<STORAGE_CLASS>"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: <VOL_SIZE>Gi
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: <SVC_NAME>-mssql
  spec:
    clusterIP: None
    ports:
    - name: tcp
      port: 1433
      protocol: TCP
      targetPort: 1433
    selector:
      app: <SVC_NAME>-mssql
    sessionAffinity: None
    type: ClusterIP
kind: List
metadata: {}
