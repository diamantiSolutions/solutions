
user  nginx;
worker_processes  auto;
worker_rlimit_nofile 10240;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  10240;
    accept_mutex       off;
    multi_accept       off;
}


http {
    access_log    off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    {{- if .HTTPSnippets}}
    {{range $value := .HTTPSnippets}}
    {{$value}}{{end}}
    {{- end}}

    {{if .LogFormat -}}
    log_format  main  '{{.LogFormat}}';
    {{- else -}}
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    {{- end }}
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  65;
    # RPS tests
    keepalive_timeout  300s;
    keepalive_requests 1000000;
    
    #gzip  on;

    server_names_hash_max_size {{.ServerNamesHashMaxSize}};
    {{if .ServerNamesHashBucketSize}}server_names_hash_bucket_size {{.ServerNamesHashBucketSize}};{{end}}

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    {{if .SSLProtocols}}ssl_protocols {{.SSLProtocols}};{{end}}
    {{if .SSLCiphers}}ssl_ciphers "{{.SSLCiphers}}";{{end}}
    {{if .SSLPreferServerCiphers}}ssl_prefer_server_ciphers on;{{end}}
    {{if .SSLDHParam}}ssl_dhparam {{.SSLDHParam}};{{end}}

    {{if .HealthStatus}}
    server {
        listen 80 default_server;
        server_name _;

        listen 443 ssl backlog=102400 reuseport default_server;
	
        ssl_certificate     /etc/nginx/ssl/rsa-cert.crt;
        ssl_certificate_key /etc/nginx/ssl/rsa-key.key;
        ssl_session_tickets off;
        ssl_session_cache   off;

        location /nginx-health {
            access_log off;
            default_type text/plain;
            return 200 "healthy\n";
        }
    }
    {{end}}

    # status and on-the-fly reconfiguration APIs
    server {
        listen 8080;

        root /usr/share/nginx/html;

        access_log off;

        location = /status.html {
        }

        location /status {
            status;
        }

        location /upstream_conf {
            upstream_conf;
            allow 127.0.0.1;
            deny all;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
